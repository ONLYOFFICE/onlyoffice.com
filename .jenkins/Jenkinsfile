println("Branch name: ${BRANCH_NAME}")

def aws_region = ""
def region = ""
def cloud_front_distribution_id = ""
def src_domain = ""
def public_static_url = ""
def onlyoffice_site_mysql_host = ""
def onlyoffice_site_mysql_database = ""
def onlyoffice_com_strapi_api_url = ""
def onlyoffice_com_next_public_site_url = ""
def transporter_email_host = ""
def transporter_email_port = ""
def billing_domain = ""
def billing_key = ""
def pipedrive_api_url = ""
def web_payment_we_trial_url = ""
def web_payment_dd_trial_url = ""
def web_payment_de_trial_url = ""
def web_payment_dse_trial_url = ""
def web_payment_dspd_trial_url = ""
def web_payment_dc_trial_url = ""
def sales_email = ""
def next_public_onlyoffice_document_server_url = ""
def aws_s3_bucket = ""
def aws_s3_region = ""
def docspace_domain = ""
def docspace_registration_api = ""
def next_public_testing_on = ""
def core_base_domain = ""
def google_search_url = ""
def feedback_email = ""
def support_email = ""
def webinars_email = ""
def server_email = ""
def nonprofit_email = ""
def partnership_email = ""
def callback_email = ""
def docs_cloud_signin_api = ""

switch(BRANCH_NAME) {
  case "test_deploy":
    aws_region="us-east-1"
    region="info"
    cloud_front_distribution_id="EQ4O7B2M9Q51X"
    src_domain="test-new.teamlab.info"
    public_static_url="https://test-new.teamlab.info"
    onlyoffice_site_mysql_host="teamlab-4testing.cyxlgbdbuyvm.us-east-1.rds.amazonaws.com"
    onlyoffice_site_mysql_database="teamlab_site_test"
    onlyoffice_com_strapi_api_url="https://cms.teamlab.info"
    onlyoffice_com_next_public_site_url="https://teamlab.info"
    transporter_email_host="notify.teamlab.guru"
    transporter_email_port="587"
    billing_domain="https://payments.teamlab.info/api"
    billing_key="14"
    pipedrive_api_url="https://api.pipedrive.com/v1/leads?api_token="
    web_payment_we_trial_url="https://payments.teamlab.info/api/license/getwetrial"
    web_payment_dd_trial_url="https://payments.teamlab.info/api/license/getddtrial"
    web_payment_de_trial_url="https://payments.teamlab.info/api/license/getdetrial"
    web_payment_dse_trial_url="https://payments.teamlab.info/api/license/getdsetrial"
    web_payment_dspd_trial_url="https://payments.teamlab.info/api/license/getdspdtrial"
    web_payment_dc_trial_url="https://payments.teamlab.info/api/license/getdctrial"
    next_public_onlyoffice_document_server_url="https://asc.docs.teamlab.info"
    aws_s3_bucket="static-test-new.teamlab.info"
    aws_s3_region="us-west-2"
    docspace_domain = "onlyoffice.io"
    docspace_registration_api = "https://onlyoffice"
    docs_cloud_signin_api = "https://docscloud.teamlab.info/api/auth/invite"
    next_public_testing_on = "true"
    core_base_domain = "teamlab.info"
    google_search_url = "https://www.googleapis.com/customsearch/v1"
    sales_email="nonprofit.manager.t@gmail.com"
    feedback_email = "nonprofit.manager.t@gmail.com"
    support_email = "nonprofit.manager.t@gmail.com"
    webinars_email = "nonprofit.manager.t@gmail.com"
    server_email = "nonprofit.manager.t@gmail.com"
    nonprofit_email = "nonprofit.manager.t@gmail.com"
    partnership_email = "nonprofit.manager.t@gmail.com"
    callback_email = "nonprofit.manager.t@gmail.com,teamlab.ruby@gmail.com,test.teamlab@gmail.com"
    break
  case "production_deploy":
    aws_region="us-west-2"
    region="com"
    cloud_front_distribution_id="E2JZ8IECDUCP4S"
    src_domain="2025.onlyoffice.com"
    public_static_url="https://static-site.onlyoffice.com"
    onlyoffice_com_strapi_api_url="https://cms.onlyoffice.com"
    onlyoffice_com_next_public_site_url="https://www.onlyoffice.com"
    transporter_email_host="mail.onlyoffice.com"
    transporter_email_port="587"
    billing_domain="https://payments-api.onlyoffice.com/v9.9"
    billing_key="83"
    pipedrive_api_url="https://api.pipedrive.com/v1/leads?api_token="
    web_payment_we_trial_url="https://payments-api.onlyoffice.com/v9.9/license/getwetrial"
    web_payment_dd_trial_url="https://payments-api.onlyoffice.com/v9.9/license/getddtrial"
    web_payment_de_trial_url="https://payments-api.onlyoffice.com/v9.9/license/getdetrial"
    web_payment_dse_trial_url="https://payments-api.onlyoffice.com/v9.9/license/getdsetrial"
    web_payment_dspd_trial_url="https://payments-api.onlyoffice.com/v9.9/license/getdspdtrial"
    web_payment_dc_trial_url="https://payments-api.onlyoffice.com/v9.9/license/getdctrial"
    next_public_onlyoffice_document_server_url="https://asc.docs.onlyoffice.com"
    aws_s3_bucket="static-site.onlyoffice.com"
    aws_s3_region="us-west-2"
    docspace_domain = "onlyoffice.com"
    docspace_registration_api = "https://api-system.onlyoffice"
    docs_cloud_signin_api = "https://docscloud.onloffice.com/api/auth/invite"
    next_public_testing_on = "false"
    core_base_domain = "onlyoffice.co"
    google_search_url = "https://www.googleapis.com/customsearch/v1"
    sales_email="sales@onlyoffice.com"
    feedback_email = "feedback@onlyoffice.com"
    support_email = "support@onlyoffice.com"
    webinars_email = "webinars@onlyoffice.com"
    server_email = "server@onlyoffice.com"
    nonprofit_email = "nonprofit.manager.t@gmail.com"
    partnership_email = "sales@onlyoffice.com"
    callback_email = "callback@onlyoffice.com,sales@onlyoffice.com,anastasiia.reagan@onlyoffice.com"
    break
  default:
    println("Branch: ${BRANCH_NAME} do not for deploy.")
    break
}

pipeline {
  agent { label 'ubuntu' }
  triggers {
    githubPush()
  }
  options {
    disableConcurrentBuilds()
    buildDiscarder (logRotator(numToKeepStr: '5', artifactNumToKeepStr: '5'))
  }
  stages {
    
    stage('deploy') {
      when { 
        anyOf { branch 'test_deploy';
                branch 'production_deploy' }
      }
      environment {
        region = "${region}"
        src_domain="${src_domain}"
        public_static_url = "${public_static_url}"
        onlyoffice_site_mysql_host="${onlyoffice_site_mysql_host}"
        onlyoffice_site_mysql_database="${onlyoffice_site_mysql_database}"
        onlyoffice_com_strapi_api_url="${onlyoffice_com_strapi_api_url}"
        onlyoffice_com_next_public_site_url="${onlyoffice_com_next_public_site_url}"
        transporter_email_host="${transporter_email_host}"
        transporter_email_port="${transporter_email_port}"
        billing_domain="${billing_domain}"
        billing_key="${billing_key}"
        pipedrive_api_url="${pipedrive_api_url}"
        sales_email="${sales_email}"
        web_payment_we_trial_url="${web_payment_we_trial_url}"
        web_payment_dd_trial_url="${web_payment_dd_trial_url}"
        web_payment_de_trial_url="${web_payment_de_trial_url}"
        web_payment_dse_trial_url="${web_payment_dse_trial_url}"
        web_payment_dspd_trial_url="${web_payment_dspd_trial_url}"
        web_payment_dc_trial_url="${web_payment_dc_trial_url}"
        next_public_onlyoffice_document_server_url="${next_public_onlyoffice_document_server_url}"
        aws_s3_bucket = "${aws_s3_bucket}"
        aws_s3_region = "${aws_s3_region}"
        docspace_domain = "${docspace_domain}"
        docspace_registration_api = "${docspace_registration_api}"
        next_public_testing_on = "${next_public_testing_on}"
        core_base_domain = "${core_base_domain}"
        google_search_url = "${google_search_url}"
        feedback_email = "${feedback_email}"
        support_email = "${support_email}"
        webinars_email = "${webinars_email}"
        server_email = "${server_email}"
        nonprofit_email = "${nonprofit_email}"
        partnership_email = "${partnership_email}"
        docs_cloud_signin_api = "${docs_cloud_signin_api}"
        callback_email = "${callback_email}"
      }
      steps {
        withCredentials([usernamePassword(credentialsId: 'onlyoffice_site_test_mysql_credentials', 
                        passwordVariable: 'onlyoffice_site_mysql_password', 
                        usernameVariable: 'onlyoffice_site_mysql_user'),
                        usernamePassword(credentialsId: 'onlyoffice_site_test_email_credentials', 
                        passwordVariable: 'transporter_email_auth_password_test', 
                        usernameVariable: 'transporter_email_auth_user_test'),
                        usernamePassword(credentialsId: 'onlyoffice_site_prod_email_credentials', 
                        passwordVariable: 'transporter_email_auth_password_prod', 
                        usernameVariable: 'transporter_email_auth_user_prod'),
                        usernamePassword(credentialsId: 'cmsoforms-user', 
                        passwordVariable: 'cmsoforms_password', 
                        usernameVariable: 'cmsoforms_user'),
                        string(credentialsId: 'onlyoffice_site_test_hcaptcha_site_key', variable: 'onlyoffice_site_test_hcaptcha_site_key'),
                        string(credentialsId: 'onlyoffice_site_test_hcaptcha_secret_key', variable: 'onlyoffice_site_test_hcaptcha_secret_key'),
                        string(credentialsId: 'onlyoffice_site_test_billing_secret', variable: 'onlyoffice_site_test_billing_secret'),
                        string(credentialsId: 'onlyoffice_site_test_pipedrive_api_token', variable: 'onlyoffice_site_test_pipedrive_api_token'),
                        string(credentialsId: 'onlyoffice_site_test_document_server_token', variable: 'onlyoffice_site_test_document_server_token'),
                        string(credentialsId: 'onlyoffice_site_test_thirdparty_domain', variable: 'onlyoffice_site_test_thirdparty_domain'),
                        string(credentialsId: 'onlyoffice_site_test_core_machinekey', variable: 'onlyoffice_site_test_core_machinekey'),
                        string(credentialsId: 'onlyoffice_site_test_google_analytics_url', variable: 'onlyoffice_site_test_google_analytics_url'),
                        string(credentialsId: 'onlyoffice_site_test_google_search_cx', variable: 'onlyoffice_site_test_google_search_cx'),
                        string(credentialsId: 'onlyoffice_site_test_google_search_key', variable: 'onlyoffice_site_test_google_search_key'),
                        string(credentialsId: 'onlyoffice_site_test_core_mysql_url', variable: 'onlyoffice_site_test_core_mysql_url'),
                        string(credentialsId: 'onlyoffice_site_test_core_us_mysql', variable: 'onlyoffice_site_test_core_us_mysql'),
                        string(credentialsId: 'onlyoffice_site_test_core_io_mysql_url', variable: 'onlyoffice_site_test_core_io_mysql_url'),
                        string(credentialsId: 'onlyoffice_site_test_core_io2_mysql_url', variable: 'onlyoffice_site_test_core_io2_mysql_url'),
                        string(credentialsId: 'onlyoffice_site_test_teamlabsite_mysql_url', variable: 'onlyoffice_site_test_teamlabsite_mysql_url'),
                        string(credentialsId: 'onlyoffice_site_test_personal_mysql_url', variable: 'onlyoffice_site_test_personal_mysql_url'),                        
                        string(credentialsId: 'onlyoffice_site_prod_hcaptcha_site_key', variable: 'onlyoffice_site_prod_hcaptcha_site_key'),
                        string(credentialsId: 'onlyoffice_site_prod_hcaptcha_secret_key', variable: 'onlyoffice_site_prod_hcaptcha_secret_key'),
                        string(credentialsId: 'onlyoffice_site_prod_billing_secret', variable: 'onlyoffice_site_prod_billing_secret'),
                        string(credentialsId: 'onlyoffice_site_prod_pipedrive_api_token', variable: 'onlyoffice_site_prod_pipedrive_api_token'),
                        string(credentialsId: 'onlyoffice_site_prod_document_server_token', variable: 'onlyoffice_site_prod_document_server_token'),
                        string(credentialsId: 'onlyoffice_site_prod_thirdparty_domain', variable: 'onlyoffice_site_prod_thirdparty_domain'),
                        string(credentialsId: 'onlyoffice_site_prod_core_machinekey', variable: 'onlyoffice_site_prod_core_machinekey'),
                        string(credentialsId: 'onlyoffice_site_prod_google_analytics_url', variable: 'onlyoffice_site_prod_google_analytics_url'),
                        string(credentialsId: 'onlyoffice_site_prod_google_search_cx', variable: 'onlyoffice_site_prod_google_search_cx'),
                        string(credentialsId: 'onlyoffice_site_prod_google_search_key', variable: 'onlyoffice_site_prod_google_search_key'),
                        string(credentialsId: 'onlyoffice_site_prod_core_mysql_url', variable: 'onlyoffice_site_prod_core_mysql_url'),
                        string(credentialsId: 'onlyoffice_site_prod_core_eu_mysql_url', variable: 'onlyoffice_site_prod_core_eu_mysql_url'),
                        string(credentialsId: 'onlyoffice_site_prod_core_sg_mysql_url', variable: 'onlyoffice_site_prod_core_sg_mysql_url'),
                        string(credentialsId: 'onlyoffice_site_prod_core_com_mysql_url', variable: 'onlyoffice_site_prod_core_com_mysql_url'),
                        string(credentialsId: 'onlyoffice_site_prod_core_com2_mysql_url', variable: 'onlyoffice_site_prod_core_com2_mysql_url'),
                        string(credentialsId: 'onlyoffice_site_prod_core_teamlabsite_mysql_url', variable: 'onlyoffice_site_prod_core_teamlabsite_mysql_url'),
                        string(credentialsId: 'onlyoffice_site_prod_core_personal_mysql_url', variable: 'onlyoffice_site_prod_core_personal_mysql_url')]) {          
        sh '''

          export AWS_ACCESS_KEY_ID="$cmsoforms_user"
          export AWS_SECRET_ACCESS_KEY="$cmsoforms_user"
          export AWS_DEFAULT_REGION="$aws_s3_region"
          
          aws s3 sync ./public s3://$aws_s3_bucket --exact-timestamps --region $aws_s3_region

          sed -i "s^var_notification_app_name^$src_domain^" .jenkins/build.sh
          cp .jenkins/build.sh .jenkins/site_build.sh

          sed -i "s^var_next_public_site_url^$onlyoffice_com_next_public_site_url^" .env
          sed -i "s^var_next_public_testing_on^$next_public_testing_on^" .env
          sed -i "s^var_strapi_api_url^$onlyoffice_com_strapi_api_url^" .env

          sed -i "s^var_billing_domain^$billing_domain^" .env
          sed -i "s^var_billing_key^$billing_key^" .env

          sed -i "s^var_next_public_onlyoffice_document_server_url^$next_public_onlyoffice_document_server_url^" .env

          sed -i "s^var_transporter_email_host^$transporter_email_host^" .env
          sed -i "s^var_transporter_email_port^$transporter_email_port^" .env

          sed -i "s^var_pipedrive_api_url^$pipedrive_api_url^" .env

          sed -i "s^var_sales_email^$sales_email^" .env
          sed -i "s^var_feedback_email^$feedback_email^" .env
          sed -i "s^var_support_email^$support_email^" .env
          sed -i "s^var_webinars_email^$webinars_email^" .env
          sed -i "s^var_server_email^$server_email^" .env
          sed -i "s^var_nonprofit_email^$nonprofit_email^" .env
          sed -i "s^var_partnership_request_email^$partnership_email^" .env
          sed -i "s^var_callback_email^$callback_email^" .env

          sed -i "s^var_web_payment_we_trial_url^$web_payment_we_trial_url^" .env
          sed -i "s^var_web_payment_dd_trial_url^$web_payment_dd_trial_url^" .env
          sed -i "s^var_web_payment_de_trial_url^$web_payment_de_trial_url^" .env
          sed -i "s^var_web_payment_dse_trial_url^$web_payment_dse_trial_url^" .env
          sed -i "s^var_web_payment_dspd_trial_url^$web_payment_dspd_trial_url^" .env
          sed -i "s^var_web_payment_dc_trial_url^$web_payment_dc_trial_url^" .env

          sed -i "s^var_aws_s3_bucket^$aws_s3_bucket^" .env
          sed -i "s^var_aws_s3_access_key^$cmsoforms_user^" .env
          sed -i "s^var_aws_s3_secret_access_key^$cmsoforms_password^" .env
          sed -i "s^var_aws_s3_region^$aws_s3_region^" .env

          sed -i "s^var_docspace_domain^$docspace_domain^" .env
          sed -i "s^var_docspace_registration_api^$docspace_registration_api^" .env

          sed -i "s^var_docs_cloud_signin_api^$docs_cloud_signin_api^" .env

          sed -i "s^var_google_search_url^$google_search_url^" .env
          sed -i "s^var_core_base_domain^$core_base_domain^" .env
        
          if [ "${region}" = "info" ]; then

            sed -i "s^var_next_public_hcaptcha_site_key^$onlyoffice_site_test_hcaptcha_site_key^" .env
            sed -i "s^var_hcaptcha_secret_key^$onlyoffice_site_test_hcaptcha_secret_key^" .env
            sed -i "s^var_billing_secret^$onlyoffice_site_test_billing_secret^" .env
            sed -i "s^var_onlyoffice_document_server_token^$onlyoffice_site_test_document_server_token^" .env
            sed -i "s^var_pipedrive_api_token^$onlyoffice_site_test_pipedrive_api_token^" .env


            sed -i "s^var_thirdparty_domain^$onlyoffice_site_test_thirdparty_domain^" .env
            sed -i "s^var_google_analytics_url^$onlyoffice_site_test_google_analytics_url^" .env
            sed -i "s^var_google_search_cx^$onlyoffice_site_test_google_search_cx^" .env
            sed -i "s^var_google_search_key^$onlyoffice_site_test_google_search_key^" .env

            sed -i "s^var_core_machinekey^$onlyoffice_site_test_core_machinekey^" .env

            sed -i "s^var_transporter_email_auth_user^$transporter_email_auth_user_test^" .env
            sed -i "s|var_transporter_email_auth_password|$transporter_email_auth_password_test|" .env

            sed -i "s^var_core_mysql_url^$onlyoffice_site_test_core_mysql_url^" .env
            sed -i "s^var_core_us_mysql_url^$onlyoffice_site_test_core_us_mysql^" .env
            sed -i "s^var_core_io_mysql_url^$onlyoffice_site_test_core_io_mysql_url^" .env
            sed -i "s^var_core_io2_mysql_url^$onlyoffice_site_test_core_io2_mysql_url^" .env
            sed -i "s^var_teamlabsite_mysql_url^$onlyoffice_site_test_teamlabsite_mysql_url^" .env
            sed -i "s^var_personal_mysql_url^$onlyoffice_site_test_personal_mysql_url^" .env

            cp .jenkins/robots.txt ./

          fi

          if [ "${region}" = "com" ]; then

            sed -i "s^var_next_public_hcaptcha_site_key^$onlyoffice_site_prod_hcaptcha_site_key^" .env
            sed -i "s^var_hcaptcha_secret_key^$onlyoffice_site_prod_hcaptcha_secret_key^" .env
            sed -i "s^var_billing_secret^$onlyoffice_site_prod_billing_secret^" .env
            sed -i "s^var_onlyoffice_document_server_token^$onlyoffice_site_prod_document_server_token^" .env
            sed -i "s^var_pipedrive_api_token^$onlyoffice_site_prod_pipedrive_api_token^" .env

            sed -i "s^var_thirdparty_domain^$onlyoffice_site_prod_thirdparty_domain^" .env
            sed -i "s^var_google_analytics_url^$onlyoffice_site_prod_google_analytics_url^" .env
            sed -i "s^var_google_search_cx^$onlyoffice_site_prod_google_search_cx^" .env
            sed -i "s^var_google_search_key^$onlyoffice_site_prod_google_search_key^" .env

            sed -i "s^var_core_machinekey^$onlyoffice_site_prod_core_machinekey^" .env

            sed -i "s^var_transporter_email_auth_user^$transporter_email_auth_user_prod^" .env
            sed -i "s|var_transporter_email_auth_password|$transporter_email_auth_password_prod|" .env

            sed -i "s^var_core_mysql_url^$onlyoffice_site_prod_core_mysql_url^" .env
            sed -i "s^var_core_eu_mysql_url^$onlyoffice_site_prod_core_eu_mysql_url^" .env
            sed -i "s^var_core_sg_mysql_url^$onlyoffice_site_prod_core_sg_mysql_url^" .env
            sed -i "s^var_core_com_mysql_url^$onlyoffice_site_prod_core_com_mysql_url^" .env
            sed -i "s^var_core_com2_mysql_url^$onlyoffice_site_prod_core_com2_mysql_url^" .env
            sed -i "s^var_teamlabsite_mysql_url^$onlyoffice_site_prod_core_teamlabsite_mysql_url^" .env
            sed -i "s^var_personal_mysql_url^$onlyoffice_site_prod_core_personal_mysql_url^" .env

          fi
          
          tar -czpf .jenkins/onlyoffice.com.tar.gz \
            --exclude ".git" \
            --exclude ".gitignore" \
            --exclude ".jenkins" \
            --exclude "README.md" .
          
          echo "Deploy from ${BRANCH_NAME} is starting."
        '''
        }
        
        sshPublisher(failOnError: true, publishers: [sshPublisherDesc(configName: "strapi_oforms@${region}", 
          transfers: [sshTransfer(cleanRemote: false, 
            excludes: '', 
            execCommand: '''
              sudo bash /home/ubuntu/deploy/.jenkins/site_build.sh |& tee -a > /home/ubuntu/deploy/site_deploy.log
            ''', 
            execTimeout: 0, 
            flatten: false, 
            makeEmptyDirs: false, 
            noDefaultExcludes: false, 
            patternSeparator: '[, ]+', 
            remoteDirectory: '', 
            remoteDirectorySDF: false, 
            removePrefix: '', 
            sourceFiles: '.jenkins/onlyoffice.com.tar.gz,.jenkins/site_build.sh')], 
          usePromotionTimestamp: false, 
          useWorkspaceInPromotion: false, 
          verbose: false)])
      }
    }  

    stage('invalidation') {
      when { 
        anyOf { branch 'test_deploy';
                branch 'production_deploy' }
      }
      environment {
        aws_region = "${aws_region}"
        cloud_front_distribution_id = "${cloud_front_distribution_id}"
      }
      steps {
        withCredentials([usernamePassword(credentialsId: 'cmsoforms-user', 
                          passwordVariable: 'secret_key', 
                          usernameVariable: 'access_key')]) {
          sh '''
            export AWS_ACCESS_KEY_ID="$access_key"
            export AWS_SECRET_ACCESS_KEY="$secret_key"
            export AWS_DEFAULT_aws_region="$aws_region"
            
            echo "=== start invalidation ==="
            aws cloudfront create-invalidation \
              --distribution-id ${cloud_front_distribution_id} \
              --paths "/*"
          '''
        }
      }
    }  
  }
}